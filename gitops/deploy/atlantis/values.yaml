extraManifests:
  - apiVersion: external-secrets.io/v1alpha1
    kind: ExternalSecret
    metadata:
      name: github-app-pem-es
    spec:
      dataFrom:
        - key: atlantis-config-json
      refreshInterval: 1h
      secretStoreRef:
        kind: ClusterSecretStore
        name: azure-css
      target:
        creationPolicy: Owner
        name: &atlantis-config-secret atlantis-config-secret
        template:
          engineVersion: v2
          data:
            github_appid: "{{`{{ .github_appid }}`}}"
            github_secret: "{{`{{ .gh_webhook_secret }}`}}"
            key.pem: "{{`{{ .github_private_key_base64 | b64dec }}`}}"

atlantisUrl: http://atlantis.ronaldmiranda.com.br

vcsSecretName: *atlantis-config-secret

orgAllowlist: "github.com/ronald-s-homelab/*"

githubApp:
  foo: bar

environmentSecrets:
  - name: ATLANTIS_GH_APP_ID
    secretKeyRef:
      name: *atlantis-config-secret
      key: github_appid

test:
  enabled: false

image:
  repository: ronaldmiranda/atlantis
  tag: "0.30"

ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/auth-signin: https://oauth.ronaldmiranda.com.br/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.oauth2-proxy-system.svc.cluster.local/oauth2/auth
  hosts:
    - host: atlantis.ronaldmiranda.com.br
      paths:
        - "/"
  tls:
    - secretName: ronaldmiranda-tls
      hosts:
        - atlantis.ronaldmiranda.com.br

service:
  type: ClusterIP

repoConfig: |
  repos:
    - id: /.*/
      branch: /^(?i)(develop|lc[a-zA-Z]{1,3}-(\d+))$/
      allowed_overrides: [apply_requirements, workflow, delete_source_branch_on_merge]
      apply_requirements: [mergeable, undiverged, approved]
      delete_source_branch_on_merge: true
      workflow: dummy

    - id: /.*(\/atlantis-test)$/
      branch: /^(?i)(develop|lc[a-zA-Z]{1,3}-(\d+))$/
      pre_workflow_hooks:
        - run: '
            terragrunt-atlantis-config generate
              --output atlantis.yaml
              --parallel
              --apply-requirements approved,mergeable,undiverged
              --create-project-name
              --workflow dummy
            '
        - run: yq -i '.projects = (.projects | map(select(.workflow == "terragrunt_nonprd")))' atlantis.yaml

  workflows:
    dummy:
      plan:
        steps:
          - run: exit 0
      apply:
        steps:
          - run: exit 0
    terragrunt_nonprd:
      plan:
        steps:
          - run: terragrunt plan -no-color -out $PLANFILE
      apply:
        steps:
          - run: terragrunt apply -no-color $PLANFILE
