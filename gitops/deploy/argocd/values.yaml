server:
  config:
    url: https://argocd.ronaldmiranda.com.br
    application.resourceTrackingMethod: annotation
    configManagementPlugins: |
      - name: helm-resolver
        init:
          command: ["sh", "-c"]
          args: ['helm repo add "$REPO_NAME" "$REPO"; helm repo update']
        generate:
          command:
            - "sh"
            - "-c"
            - |
              #!/usr/bin/env bash

              declare -a args=(
                ''$ARGOCD_APP_NAME''
                ''$REPO_NAME'/'$CHART_NAME''
                ''$VALUE_FILES''
                '--version '$CHART_VERSION''
                '--namespace '$NAMESPACE''
              )

              helm template ${args[*]}
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/component: server

  extraArgs:
    - --insecure
  ingress:
    enabled: true
    extraPaths: []
    hosts:
      - argocd.ronaldmiranda.com.br
    https: true
    ingressClassName: nginx
    pathType: Prefix
    paths:
      - /
    tls:
      - hosts:
          - argocd.ronaldmiranda.com.br
        secretName: ronaldmiranda-cert

  additionalApplications:
    - name: argo-applications
      namespace: argocd-system
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      project: default
      source:
        repoURL: https://github.com/Ronald-s-Homelab/personal-homelab.git
        targetRevision: main
        path: gitops/stable/argo-resources
        helm:
          valueFiles:
            - ../../deploy/argo-resources/applications.local.yaml
            - ../../deploy/argo-resources/applications.yaml
            - ../../deploy/argo-resources/projects.yaml
      destination:
        name: in-cluster
        namespace: argocd-system
      syncPolicy:
        automated:
          prune: false
          selfHeal: false

redis-ha:
  enabled: true
  persistentVolume:
    enabled: true

controller:
  replicas: 2
  enableStatefulSet: true
  env:
    - name: "ARGOCD_CONTROLLER_REPLICAS"
      value: "2"
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/component: application-controller

repoServer:
  autoscaling:
    enabled: true
    minReplicas: 2
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/component: repo-server
